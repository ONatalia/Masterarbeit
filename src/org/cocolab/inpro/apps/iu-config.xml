
    <property name="deltifier" value="wasd"/>
    <property name="deltifierParam" value="0"/>
    <property name="baseData" value="baseData"/>
    <property name="dialogueManager" value="dialogueManager"/>
    <property name="semanticComposer" value="semanticComposer"/>
    <property name="semanticResolver" value="semanticResolver"/>
    <!-- Domain defs: -->
    <!-- DIGITS -->
    <!-- 
        <property name="chunkMarkers" value="in die,field;in der,tile" />
        <property name="semanticsFile" value="res/PentoAVMWordlList" />
        <property name="semanticsMapping" value="res/PentoAVMapping" />
        <property name="structureFile" value="res/PentoAVMStructure" />
     -->
    <!-- PENTO -->
    <!--
        <property name="chunkMarkers" value="in die,field;in der,tile" />
        <property name="semanticsFile" value="res/PentoAVMWordlList" />
        <property name="semanticsMapping" value="res/PentoAVMapping" />
        <property name="structureFile" value="res/PentoAVMStructure" />
     -->
    <!-- Domain: TRAVEL -->
        <!-- 
        <property name="chunkMarkers" value="von,origin;nach,destination" />
        <property name="semanticsFile" value="res/TravelAVMWordlList" />
        <property name="semanticsMapping" value="res/TravelAVMapping" />
        <property name="structureFile" value="res/TravelAVMStructure" />
    -->


    <!-- ******************************************************** -->
    <!-- The incremental processing configuration                 -->
    <!-- ******************************************************** -->
    <component name="currentASRHypothesis" type="org.cocolab.inpro.incremental.processor.CurrentASRHypothesis">
        <property name="frontend" value="${frontend}"/>
        <property name="asrFilter" value="${deltifier}"/>
        <property name="baseData" value="${baseData}"/>
        <propertylist name="hypChangeListeners">
<!--
    		<item>${semanticComposer}</item>
	     <item>iuBasedFloorTracker</item>
    		<item>tedNotifier</item>
    		<item>hypViewer</item>
	     <item>outputForSimpleText</item>
	     <item>iuNetworkViewer</item>
        	<item>consoleNotifier</item>
         	<item>labelWriter2</item>
    		<item>oaaNotifier</item>
-->
           <item>${semanticComposer}</item>
           <item>iuBasedFloorTracker</item>
        </propertylist>
    </component>

    <component name="semanticComposer" type="org.cocolab.inpro.incremental.processor.SemanticComposer">
        <property name="semanticsMapping" value="${semanticsMapping}" />
        <property name="structureFile" value="${structureFile}" />
        <property name="chunkMarkers" value="${chunkMarkers}" />
        <propertylist name="hypChangeListeners">
<!--           <item>consoleNotifier</item> 
	    		<item>tedNotifier</item>
          	<item>labelWriter2</item> -->
          	<item>${semanticResolver}</item>
    			<item>consoleNotifier</item>
        </propertylist>
     </component>

    <component name="semanticResolver" type="org.cocolab.inpro.incremental.processor.SemanticResolver">
        <property name="semanticsFile" value="${semanticsFile}" />
        <property name="structureFile" value="${structureFile}" />
        <property name="composer" value="${semanticComposer}"/>
        <propertylist name="hypChangeListeners">
<!--           <item>consoleNotifier</item> 
	    		<item>tedNotifier</item>
          	<item>labelWriter2</item> -->
    			<item>${dialogueManager}</item>
        </propertylist>
     </component>

	<component name="iuBasedFloorTracker" type="org.cocolab.inpro.incremental.processor.IUBasedFloorTracker">
		<property name="useProsody" value="${useProsody}" />
		<property name="risingProsodyTimeout" value="${risingProsodyTimeout}" />
		<property name="anyProsodyTimeout" value="${anyProsodyTimeout}" />
		<propertylist name="ftlisteners">
			<item>${dialogueManager}</item>
		</propertylist>
	</component>
	<component name="textBasedFloorTracker" type="org.cocolab.inpro.incremental.processor.TextBasedFloorTracker">
		<propertylist name="listeners">
			<item>${dialogueManager}</item>
		</propertylist>
	</component>

	<component name="dialogueManager" type="org.cocolab.inpro.incremental.processor.QUDDialogueManager">
		<property name="nlu" value="${semanticResolver}"/>
		<property name="dispatchStream" value="dispatchStream"/>
	</component>

    <component name="baseData" type="org.cocolab.inpro.incremental.basedata.BaseData"/>

	<component name="none" type="org.cocolab.inpro.incremental.deltifier.ASRWordDeltifier"/>
    <component name="nonIncr" type="org.cocolab.inpro.incremental.deltifier.NonIncrementalDeltifier"/>
    <component name="wasd" type="org.cocolab.inpro.incremental.deltifier.WordAdaptiveSmoothingDeltifier">
        <property name="safeWord" value="no" />
        <property name="urgentWord" value="take" />
    </component>

    <component name="fixedLag" type="org.cocolab.inpro.incremental.deltifier.FixedLagDeltifier">
        <property name="fixedLag" value="${deltifierParam}"/>
    </component>

    <component name="smoothing" type="org.cocolab.inpro.incremental.deltifier.SmoothingDeltifier">
        <property name="smoothing" value="${deltifierParam}"/>
    </component>

	<component name="outputForSimpleText" type="org.cocolab.inpro.incremental.listener.OutputForSimpleText"/>
    <component name="consoleNotifier" type="org.cocolab.inpro.incremental.listener.ConsoleNotifier"/>
    <component name="oaaNotifier" type="org.cocolab.inpro.incremental.listener.OAANotifier"/>
    <component name="tedNotifier" type="org.cocolab.inpro.incremental.listener.TEDviewNotifier"/>
    <component name="labelWriter2" type="org.cocolab.inpro.incremental.listener.LabelWriter"/>
    <component name="hypViewer" type="org.cocolab.inpro.incremental.listener.CurrentHypothesisViewer"/>
    <component name="iuNetworkViewer" type="org.cocolab.inpro.incremental.listener.IUNetworkViewer"/>

    <component name="oaaDispatchStream" type="org.cocolab.inpro.audio.OAADispatchStream">
    	<!-- this is an OAA agent name, it has nothing to do with the identically named component below -->
        <property name="agentName" value="dispatchStream"/>
        <property name="goalPrefix" value="x"/>
        <property name="sendSilence" value="false"/>
    </component>

    <component name="dispatchStream" type="org.cocolab.inpro.audio.DispatchStream">
        <property name="sendSilence" value="true"/>
    </component>

    